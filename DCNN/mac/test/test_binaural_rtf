import bin_sm
import matplotlib.pyplot as plt 
import numpy as np
import sys
sys.path.append("/Users/vtokala/Documents/Research")
import mac

def test_fblms_rtf(sm, ref_ch=1):

    print('\ntesting fblms rtf estimation')

    ref_ind = ref_ch - 1
    encoded_channels = list(range(sm.Nch))
    encoded_channels.remove(ref_ind)

    M = sm.N_rtf_t #length of the rtf

    rtf_f, e, y_hat = mac.est.fblms_est(sm.y, ref_ch, M)
    _,_,N_segs = np.shape(rtf_f)

    mse = mac.eval.mse_db(sm.y[:,encoded_channels], y_hat[:,encoded_channels])
    print('mse between y and y_hat = ' + str(mse) + ' dB')
    print(sm.y.shape)
    print(encoded_channels)

    rtf_td = np.zeros((M, sm.Nch, N_segs))
    for n in range(N_segs):
       rtf_td[:,:,n] = np.real(np.fft.ifft(rtf_f[:,:,n], axis=0))[:M,:]

    print(rtf_td.shape)
    return rtf_td, y_hat, mse


def sim_test_main():
    
    
    sm = bin_sm.SignalModel(Nch=2,N_rtf_t=1024)
    # breakpoint()
    print(sm.y)

    rtf_fblms, y_hat_fblms, mse_fblms = test_fblms_rtf(sm,ref_ch=1)

    plt.figure()
    plt.plot(rtf_fblms[:,1,-1])
    plt.show()
    pass

if __name__ == '__main__':

    sim_test_main()
